#!/usr/bin/perl

use strict;
use warnings;
use Email::MIME;

my $input;
my $output;
Slurp in E-Mail from STDIN
{
	local( $/ );
	$input = <STDIN>;
}

##Setup basic settings
my $severityMap = {
	'enhancement' 	=> "\00315enhancement\003",
	'trivial'		=> "trivial",
	'minor'			=> "minor",
	'normal'		=> "normal",
	'major'			=> "major",
	'critical'		=> "\00304CRIT\003",
	'blocker'		=> "\00304\002BLOCKER\002\003"
};

my $resolutionMap = {
	'WORKSFORME'	=> "\00314(WFM)\003",
	'INVALID'		=> "\00314(INVALID)\003",
	'DUPLICATE'		=> "\00314(DUP)\003",
	'FIXED'			=> "\00303(FIXED)\003",
	'WONTFIX'		=> "\00303(WONTFIX)\003",
	'LATER'			=> "\00306(LATER)\003",
	'REMIND'		=> "\00306(REMIND)\003"
};

my $mail = Email::MIME->new( $input );

my $from = $mail->header( 'From' );
my $body = $mail->body;
my $subject = $mail->header( 'Subject' );

if( $from =~ /^bugzilla-daemon/ ) {{
	#E-Mail is from WM Bugzilla
	#Create status flags;
	my ($haschanges,$user);

	my $comment = $body =~ s/^--- Comment #\d+ from (.*?)?<?(\S+)\@.*//ms;
	if($comment) {
		#Set user to Real name if specified else use e-mail
		$user = $1 ? $1 : $2;
		$user =~ s/\s+$//g;
	} else {
		$body =~ m/(.*)\s+<(\S+\@\S+)>\s+changed/;
		$user = $1 ? $1 : 'N/A';
	}

	my @changed_fields = split /\s+/, $mail->header( 'X-Bugzilla-Changed-Fields' );

	#Skip dependency notifications
	last if $body =~ /^Bug \d+ depends on bug \d+, which changed state/m;

	my($bug, $summary, $status);

	($bug, $summary) = $subject =~ /\[Bug (\d+)\]\s(.*)/s;
	
	$status = $mail->header( 'X-Bugzilla-Status' );

	##Get the url from the message
	my ($bugId) = $mail->header( 'In-Reply-To' ) =~ m/bug-(\d+)/;
	my $url = 'https://bugzilla.wikimedia.org/show_bug.cgi?id=' . $bugId;

	$summary =~ s/\s+/ /g;

	if( $subject =~ /\[Bug (\d+)\]\s+New:(.*)/s ) {
		my $product 	= $mail->header( 'X-Bugzilla-Product' );
		my $component 	= $mail->header( 'X-Bugzilla-Component' );
		my $severity	= $mail->header( 'X-Bugzilla-Severity' );
		my $priority	= $mail->header( 'X-Bugzilla-Priority' );
		my $reporter	= $mail->header( 'X-Bugzilla-Who' );
#		my $reporter	= $1 if $body =~ /ReportedBy: (.*)\@.*$/m;

		$output = "\00303(NEW)\003 $summary - \00310$url\003 " . $severityMap->{$severity} .
			"; $priority; \002$product\002\: $component; (\002$reporter\002)\n";
	} else {
		if( $mail->header( 'X-Bugzilla-Type' ) eq 'newchanged' ) {
			my @outputs;
			my $status = "\00303(mod)\003";
			if($body =~ /Severity\|(\w+)\s+\|(\w+)/m) {
				push(@outputs, $severityMap->{$1} . '->' . $severityMap->{$2});
			}
			if($body =~ /Resolution\|(\w+)?\s+\|(\w+)/m ) {
				$status = $resolutionMap->{$2};
			}
			if($body =~ /Priority\|(\w+)\s+\|(\w+)/m ) {
				push(@outputs, lc($1) . '->' . lc($2) );
			}
			if($body =~ /Keywords\|.*$/s) {
			}
			push @outputs, 'summary' if grep{$_ eq 'Summary'} @changed_fields;
			push @outputs, 'deps' if grep{$_ eq 'OtherBugs'} @changed_fields;
			push @outputs, '+comment' if $comment;

	        $output = "$status $summary - \00310$url\003 ";
			$output .= join('; ', @outputs) if @outputs;
		}
		$output .= " (\002\00310$user\003\002)\n";
	}
}}

if ($output) {
	open( OUT, ">>/var/wikibugs/wikibugs.log");
	print OUT $output;
	close OUT;
}
